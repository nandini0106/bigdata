# -*- coding: utf-8 -*-
"""TF-IDFusingMapReduceUsingPythonListAndDictionary.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cfuSUd9hLQwbZM_ErWSzX15NNJUv6IBS
"""

data=[(1,'i love dogs'),(2,"i hate dogs and knitting"),(3,"knitting is my hobby and my passion")]

import numpy as np
import string
import math

def mapper1(input):
 
    return [((word,i+1),1) for i in [0,1,2] for word in input[i][1].split()]

mapped1 = mapper1(data) 
mapped1

mapped1[3][0]

def reducer1(mapped1):
 d = dict()
 for i in range(len(mapped1)):
  word = mapped1[i][0]
  if word in d:
    d[word] = d[word] + 1
  else:
            # Add the word to dictionary with count 1
    d[word] = 1
 return d

d1 = reducer1(mapped1)
d1

list1 = [(k, v) for k, v in d1.items()]
list1

list1[3][0][0]

def mapper2(input):
 
    return [(input[i][0][0],(input[i][0][1],input[i][1],1)) for i in range(len(list1))]



mapped2 = mapper2(list1) 
mapped2

w = mapped2[7][0]
w

def reducer2(mapped2):
 d = dict()
 for i in range(len(mapped2)):
  word = mapped2[i][0]
  if word in d:
    d[word] = d[word] + 1
  else:
            # Add the word to dictionary with count 1
    d[word] = 1
 return d

d2 = reducer2(mapped2)
d2

list2 = [(k, v) for k, v in d2.items()]
list2

def reducer3(list1,list2):
 d = dict()
 for i in range(len(list1)):
   for j in range(len(list2)):
    key = list1[i][0]
    key1 = key[0]
    value1 = list1[i][1]
    key2 = list2[j][0]
    value2 = list2[j][1]
    if key1==key2:
        d[key] = value1*math.log((len(data))/value2)
        #print(key1)
    else:
            # Add the word to dictionary with count 1
        pass
 return d

d = reducer3(list1,list2)

d